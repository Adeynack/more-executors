buildscript {
    ext {
        kotlin_version = '1.2.10' // DON'T FORGET TO CHANGE THE PLUGIN VERSION AS WELL
        PUBLISH_VERSION = '0.1-SNAPSHOT'
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "1.2.10"
    id "net.ltgt.errorprone" version "0.0.13"
    id 'maven-publish'
}

group 'com.github.adeynack'
version "$PUBLISH_VERSION"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "com.google.errorprone:error_prone_core:2.1.3"
    testCompile "junit:junit:4.12"
    testCompile "org.hamcrest:hamcrest-junit:2.0.0.0"
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:all" << "-Xlint:-processing" << "-Xlint:-serial" << "-Werror"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    testLogging {
        // Other events: "STARTED"
        events "PASSED", "FAILED", "SKIPPED"
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        MavenPub(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId 'com.github.adeynack'
            version "$PUBLISH_VERSION"
        }
    }
}
